#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass book
\use_default_options false
\maintain_unincluded_children false
\language spanish
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Chapter
Estado actual de los conocimientos científicos-técnicos
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
minitoc
\end_layout

\end_inset


\end_layout

\begin_layout Standard
En este capítulo se describen el estado actual de los conocimientos científicos-
técnicos empleados en este proyecto
\begin_inset Foot
status open

\begin_layout Plain Layout
Lo que en inglés se conoce como state of the art.
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Section
Inteligencia Artificial en Videojuegos
\end_layout

\begin_layout Standard
Los videojuegos se han convertido en uno de los sectores más importantes
 de la industria del entretenimiento
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Prueba de ellos, es que existen juegos con costes de desarrollo superiores
 a los de muchas superproducciones de Hollywood.
 Por ejemplo se estima que el videojuego Star Wars: The old Republic ha
 tenido un coste de producción de 200 millones de dolares mientras que las
 últimas películas de la misma trilogía (Star Wars) han tenido un presupuesto
 de unos 120 millones de dólares cada una.
\end_layout

\end_inset

.
 La gran mayoría de las compañías han centrado siempre su investigación
 en la calidad gráfica de los juegos, entendiendo que el aspecto gráfico
 era lo más demandado (y celebrado) por los jugadores.
 Sin embargo, hoy en día los ordenadores y videoconsolas tienen una gran
 capacidad de procesamiento (tanto gráfico como físico) y los jugadores
 cada vez se ven menos sorprendidos por las mejoras gráficas.
 
\end_layout

\begin_layout Standard
Quizás debido a esta nueva tendencia los jugadores han dejado de buscar
 la excelencia gráfica a favor de encontrar nuevos retos hacia sus habilidades.
 Así no es de extrañar que hayan proliferado los juegos multijugadores,
 pues ofrecen un reto considerablemente más atractivo.
 Y ese reto viene en parte por enfrentarse a oponentes cada vez más inteligentes
 y eficaces: un oponente humano.
 Así pues, cuando se diseña la inteligencia artificial de un juego
\begin_inset Foot
status open

\begin_layout Plain Layout
Que en cierta manera debe ser entendida como un 
\begin_inset Quotes eld
\end_inset

reemplazo
\begin_inset Quotes erd
\end_inset

 de un oponente humano.
\end_layout

\end_inset

, se debe buscar ofrecer no solo un comportamiento no errático del juego,
 sino que se hace necesario no solo ofrecer un comportamiento cada vez más
 eficaz, sino ser un oponente que se acerque cada vez más al comportamiento
 humano.
\end_layout

\begin_layout Standard
Durante estos años, la investigación en Inteligencia Artificial aplicada
 a videojuegos ha seguido varios caminos, principalmente iniciados por la
 mejora en la inteligencia artificial en los FPS
\begin_inset Foot
status open

\begin_layout Plain Layout
First Person Shooter, o juegos de disparos en primera persona.
\end_layout

\end_inset

 promovido por juegos como Doom o Quake a comienzos de los 90; o por Unreal
 Tournament que se ha convertido en uno de los entornos más famosos de este
 tipo de juegos.
\end_layout

\begin_layout Standard
Sin embargo, la mayoria de las investigaciones en el campo de la inteligencia
 artificial para juegos se han enfocado en juegos relativamente simples
 como Super Mario, Pac-Man o juegos de conducción,...debido principalmente
 al número emergente de competiciones sobre estos juegos.
 Nuestro proyecto fin de carrera, como hemos expuesto en el capítulo anterior,
 nace gracias a uno de estos campeonatos.
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Section
Inteligencia artificial en juegos RTS
\end_layout

\begin_layout Standard
Los juegos de estrategia en tiempo real han estado siempre muy presentes
 en las exigencias de los jugadores en cuanto a calidad de la inteligencia
 artificial se refiere.
 E igualmente han resultado bastante interesantes desde el punto de vista
 de la investigación.
 Así no es extraño encontrar trabajos sobre planificación en mundo incierto
 con información incompleta, aprendizaje, modelado de oponentes, razonamiento
 espacio/temporal,...
\end_layout

\begin_layout Standard
A pesar de todas estas investigaciones sobre el campo, la mayoría de los
 juegos de estrategia en tiempo real disponibles en el mercado, los bots
 están programados mediante scripts que han sido previamente programados
 (por ejemplo, haciendo uso de autómata de estados finitos o de árboles
 de decisión ).
 Esto supone varios impedimentos, pues por ejemplo para el diseño del mapa
 o escenario del juego se tiene que incluir patrones y guías para el comportamie
nto de los rivales.
 Además su principal lacra, es que una vez que el jugador humano aprende
 el comportamiento de su oponente, el reto del juego deja de ser interesante.
 Pues el bot pierde la capacidad de sorprender, siendo su comportamiento
 predecible, aburrido, sin ofrecer ningún reto para el jugador.
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Section
Algoritmos Evolutivos en diseño de IAs para juegos RTS
\end_layout

\begin_layout Standard
Los intentos por aplicar técnicas de inteligencia artificial más tradicionales
 suelen fracasar en este tipo de juegos, principalmente por el gran espacio
 de búsqueda existente y por no existir una solución óptima fácilmente diferenci
able.
 También ha sido frecuente el uso de algoritmos evolutivos, pero implican
 un coste computacional considerable que hace que no suelan ser muy frecuentes
 en estos juegos.
\end_layout

\begin_layout Standard
Sin embargo, las propuestas más exitosas en el uso de algoritmos evolutivos
 corresponden a juegos que han hecho uso de estas estrategias de manera
 off-line.
 Esto es, el algoritmo evolutivo opera mientras el juego no se está 
\begin_inset Quotes eld
\end_inset

jugando
\begin_inset Quotes erd
\end_inset

, por ejemplo, para optimizar el conjunto de reglas que definen el comportamient
o del bot durante el desarrollo del juego.
 El resultado conseguido por dicho algoritmo evolutivo es empleado posteriorment
e durante el juego.
 
\end_layout

\begin_layout Standard
A través del aprendizaje mediante la evolución offline se pueden conseguir
 mejorar la calidad de los bots en juegos comerciales, de manera mucho más
 significativa que mediante oponentes basados en scripts.
 Además, es posible incluir variaciones (fruto por ejemplo de algoritmos
 evolutivos diferentes) sin dificultad.
\end_layout

\begin_layout Standard
Siguiendo esa vía, en este proyecto fin carrera se aplica un algoritmo genético
 a una comportamiento variable (mediante un conjunto de reglas parametrizadas)
 dentro de un bot que juega a Planet Wars con el objetivo de construir un
 motor de decisión que sea capaz de conseguir el mayor ratio de victorias
 posibles.
\end_layout

\begin_layout Standard
Además se introduce un concepto adaptativo del comportamiento del bot, no
 solo a componentes estáticos (como por ejemplo la tipología del mapa) sino
 a componentes dinámicos que cambian a lo largo de la partida.
 
\end_layout

\end_body
\end_document
